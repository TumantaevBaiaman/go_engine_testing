package main

import "fmt"

func main() {
	// ------   ! Единственной конструкцией для циклов в Go является оператор for. ---------
	// ------             Его базовая форма выглядит следующим образом:
	/*
		for [инициализация счетчика]; [условие]; [изменение счетчика]{
			// действия
		}
	*/
	sum := 0
	for i := 1; i < 10; i++ {
		sum += i
	}
	fmt.Println(sum)

	// ------------- !Нам необязательно указывать все условия при объявлении цикла. Например, можно вынести объявление переменной вовне  ------
	var n = 1
	for ; n < 10; n++ {
		fmt.Println(n * n)
	}

	// ------------- !Можно убрать изменение счетчика в само тело цикла и оставить только условие: -------------
	var k = 1
	for k < 10 {
		fmt.Println(k * k)
		k++
	}

	// ------------- !Если цикл использует только условие, то его можно сократить следующим образом:  ----------
	var j = 1
	for j < 10 {
		fmt.Println(j * j)
		j++
	}

	// ------------- !При этом в последнем случае мы получим по сути аналог цикла while в других языках программирования.
	// -------------                        Так же можно реализовать бесконечный цикл:
	/*
		for {

		}
	*/

	// --------------------------------------------------------------------------------------------------------------------
	/*
		Кстати, иногда удобно пользоваться такой конструкцией ввода данных:
		(но будьте осторожны, ведь мы не обрабатываем здесь ошибки)
	*/
	var i int
	// считываем числа пока не будет введен 0
	for fmt.Scan(&i); i != 0; fmt.Scan(&i) {
		fmt.Println(n)
	}

}
